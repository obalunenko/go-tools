---
linters:
  enable:
    # check when errors are compared without errors.Is
    - errorlint

    # check imports order and makes it always deterministic.
    - gci

    # Very Basic spell error checker
    - misspell

    # Fast, configurable, extensible, flexible, and beautiful linter for Go.
    # Drop-in replacement of golint.
    - revive

    # make sure to use t.Helper() when needed
    - thelper

    # ensure that lint exceptions have explanations. Consider the case below:
    - nolintlint

    # detect duplicated words in code
    - dupword

    # mirror suggests rewrites to avoid unnecessary []byte/string conversion
    - mirror

    # testify checks good usage of github.com/stretchr/testify.
    - testifylint

linters-settings:
  dupword:
    # Keywords used to ignore detection.
    # Default: []
    ignore:
      - "FAIL" # "FAIL FAIL" is tolerated

  nolintlint:
    # Disable to ensure that all nolint directives actually have an effect.
    # Default: false
    allow-unused: true  # too many false positive reported
    # Exclude following linters from requiring an explanation.
    # Default: []
    allow-no-explanation: []
    # Enable to require an explanation of nonzero length
    # after each nolint directive.
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific
    # linter being suppressed.
    # Default: false
    require-specific: true

  revive:
    rules:
      - name: bare-return
      - name: blank-imports
      - name: comment-spacings
      - name: context-as-argument
        arguments:
          - allowTypesBefore: "*testing.T"
      - name: context-keys-type
      - name: defer
        arguments:
          - ["call-chain", "loop"]
      - name: dot-imports
      - name: early-return
      - name: empty-block
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: errorf
      - name: exported
        arguments:
          # enables checking public methods of private types
          - "checkPrivateReceivers"
          # make error messages clearer
          - "sayRepetitiveInsteadOfStutters"
      - name: if-return
      - name: import-shadowing
      - name: increment-decrement
      - name: indent-error-flow
      - name: exported
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: redefines-builtin-id
      - name: superfluous-else
      - name: time-naming
      - name: time-equal
      - name: unexported-return
      - name: use-any
      - name: unreachable-code
      - name: unhandled-error
        arguments:
          - "fmt.Print.*"
          - "fmt.Fprint.*"
          - "bytes.Buffer.Write.*"
          - "strings.Builder.Write.*"
      - name: unused-parameter
      - name: unused-receiver
      - name: useless-break

  # define the import orders
  gci:
    sections:
      # Standard section: captures all standard packages.
      - standard
      # Default section: catchall that is not standard or custom
      - default
      # Custom section: groups all imports with the specified Prefix.
      - prefix(github.com/mfridman)

