// Code generated by "stringer -type GenericRequirementKind,ProtocolRequirementKind,GenericPackKind,SpecialProtocol -linecomment -output protocols_string.go"; DO NOT EDIT.

package swift

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GRKindProtocol-0]
	_ = x[GRKindSameType-1]
	_ = x[GRKindBaseClass-2]
	_ = x[GRKindSameConformance-3]
	_ = x[GRKSameShape-4]
	_ = x[GRKindLayout-31]
}

const (
	_GenericRequirementKind_name_0 = "protocolsame-typebase-classsame-conformancesame-shape"
	_GenericRequirementKind_name_1 = "layout"
)

var (
	_GenericRequirementKind_index_0 = [...]uint8{0, 8, 17, 27, 43, 53}
)

func (i GenericRequirementKind) String() string {
	switch {
	case i <= 4:
		return _GenericRequirementKind_name_0[_GenericRequirementKind_index_0[i]:_GenericRequirementKind_index_0[i+1]]
	case i == 31:
		return _GenericRequirementKind_name_1
	default:
		return "GenericRequirementKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRKindBaseProtocol-0]
	_ = x[PRKindMethod-1]
	_ = x[PRKindInit-2]
	_ = x[PRKindGetter-3]
	_ = x[PRKindSetter-4]
	_ = x[PRKindReadCoroutine-5]
	_ = x[PRKindModifyCoroutine-6]
	_ = x[PRKindAssociatedTypeAccessFunction-7]
	_ = x[PRKindAssociatedConformanceAccessFunction-8]
}

const _ProtocolRequirementKind_name = "base protocolmethodinitializergettersetterread coroutinemodify coroutineassociated type access functionassociated conformance access function"

var _ProtocolRequirementKind_index = [...]uint8{0, 13, 19, 30, 36, 42, 56, 72, 103, 141}

func (i ProtocolRequirementKind) String() string {
	if i >= ProtocolRequirementKind(len(_ProtocolRequirementKind_index)-1) {
		return "ProtocolRequirementKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ProtocolRequirementKind_name[_ProtocolRequirementKind_index[i]:_ProtocolRequirementKind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GPKMetadata-0]
	_ = x[GPKWitnessTable-1]
}

const _GenericPackKind_name = "metadatawitness-table"

var _GenericPackKind_index = [...]uint8{0, 8, 21}

func (i GenericPackKind) String() string {
	if i >= GenericPackKind(len(_GenericPackKind_index)-1) {
		return "GenericPackKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _GenericPackKind_name[_GenericPackKind_index[i]:_GenericPackKind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[None-0]
	_ = x[Error-1]
}

const _SpecialProtocol_name = "noneerror"

var _SpecialProtocol_index = [...]uint8{0, 4, 9}

func (i SpecialProtocol) String() string {
	if i >= SpecialProtocol(len(_SpecialProtocol_index)-1) {
		return "SpecialProtocol(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SpecialProtocol_name[_SpecialProtocol_index[i]:_SpecialProtocol_index[i+1]]
}
