name: Build Docker multiarch image on release

on:
  workflow_dispatch:
  push:
    tags: [ 'v*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  bake-images:
    name: Build and push
    runs-on: 'ubuntu-22.04'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/arm64,linux/amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker images
        uses: docker/bake-action@v3.1.0
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          LABELS: ${{ steps.meta.outputs.labels }}
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: ${{ github.event_name != 'pull_request' }}
          pull: true

  release-notes:
    needs: [ bake-images ]
    runs-on: 'ubuntu-22.04'
    name: Release notes
    steps:
      - name: Set up go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.21'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          install-only: true

      - name: Run GoReleaser
        if: success()
        run: |
          make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
